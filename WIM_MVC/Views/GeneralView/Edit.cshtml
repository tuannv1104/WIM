@model WIM_MVC.Models.EntityFramework.Trans_VehicleInfo

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Trans_VehicleInfo</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.VehicleID)

        <div class="form-group">
            @Html.LabelFor(model => model.ID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID)
                @Html.ValidationMessageFor(model => model.ID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetrologicalID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetrologicalID)
                @Html.ValidationMessageFor(model => model.MetrologicalID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Version, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Version)
                @Html.ValidationMessageFor(model => model.Version)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime)
                @Html.ValidationMessageFor(model => model.StartTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTimeStr, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTimeStr)
                @Html.ValidationMessageFor(model => model.StartTimeStr)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LaneNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LaneNo)
                @Html.ValidationMessageFor(model => model.LaneNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ErrorFlag, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ErrorFlag)
                @Html.ValidationMessageFor(model => model.ErrorFlag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WarningFlag, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WarningFlag)
                @Html.ValidationMessageFor(model => model.WarningFlag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ViolationFlag, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ViolationFlag)
                @Html.ValidationMessageFor(model => model.ViolationFlag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direction, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direction)
                @Html.ValidationMessageFor(model => model.Direction)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoveStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoveStatus)
                @Html.ValidationMessageFor(model => model.MoveStatus)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FrontToFront, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FrontToFront)
                @Html.ValidationMessageFor(model => model.FrontToFront)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BackToFront, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BackToFront)
                @Html.ValidationMessageFor(model => model.BackToFront)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration)
                @Html.ValidationMessageFor(model => model.Duration)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleLength, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleLength)
                @Html.ValidationMessageFor(model => model.VehicleLength)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrossWeight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrossWeight)
                @Html.ValidationMessageFor(model => model.GrossWeight)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeftWeight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LeftWeight)
                @Html.ValidationMessageFor(model => model.LeftWeight)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RightWeight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RightWeight)
                @Html.ValidationMessageFor(model => model.RightWeight)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Velocity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Velocity)
                @Html.ValidationMessageFor(model => model.Velocity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WheelBase, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WheelBase)
                @Html.ValidationMessageFor(model => model.WheelBase)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AxlesCount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AxlesCount)
                @Html.ValidationMessageFor(model => model.AxlesCount)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MassUnit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MassUnit)
                @Html.ValidationMessageFor(model => model.MassUnit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VelocityUnit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VelocityUnit)
                @Html.ValidationMessageFor(model => model.VelocityUnit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DistanceUnit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DistanceUnit)
                @Html.ValidationMessageFor(model => model.DistanceUnit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.licensePlate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.licensePlate)
                @Html.ValidationMessageFor(model => model.licensePlate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlImagelicensePlate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlImagelicensePlate)
                @Html.ValidationMessageFor(model => model.UrlImagelicensePlate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlLaneImage, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrlLaneImage)
                @Html.ValidationMessageFor(model => model.UrlLaneImage)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ANPRTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ANPRTime)
                @Html.ValidationMessageFor(model => model.ANPRTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OverloadPercent, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OverloadPercent)
                @Html.ValidationMessageFor(model => model.OverloadPercent)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Datalogger_ID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Datalogger_ID)
                @Html.ValidationMessageFor(model => model.Datalogger_ID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransactionId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionId)
                @Html.ValidationMessageFor(model => model.TransactionId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleType)
                @Html.ValidationMessageFor(model => model.VehicleType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LaneID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LaneID)
                @Html.ValidationMessageFor(model => model.LaneID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FusionWarning, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FusionWarning)
                @Html.ValidationMessageFor(model => model.FusionWarning)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
