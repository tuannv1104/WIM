
@*@model IEnumerable<WIM_MVC.Models.EntityFramework.Trans_VehicleInfo>*@

@using PagedList;
@using PagedList.Mvc;

@model IPagedList<WIM_MVC.Models.EntityFramework.Trans_VehicleInfo>

    
    <table class="wimtable">
        <tr>
            <th>
                @Resources.TableHeader.Detail
            </th>
            <th>
                @Resources.TableHeader.General_Lane
            </th>
            <th>
                @Resources.TableHeader.General_DateTime
            </th>
            <th>
                @Resources.TableHeader.General_VehicleType
            </th>
            <th>
                @Resources.TableHeader.General_PlateNumber
            </th>
            <th>
                @Resources.TableHeader.General_GrossWeight
            </th>
            <th>
                @Resources.TableHeader.General_GrossWeightAllowable
            </th>
            <th>
                @Resources.TableHeader.General_LeftRightBalance
            </th>
            <th>
                @Resources.TableHeader.General_Speed
            </th>
            <th>
                @Resources.TableHeader.General_Length
            </th>
            <th>
                @Resources.TableHeader.General_NumberAxis
            </th>
            <th>
                @Resources.TableHeader.General_PercentOverload
            </th>
        </tr>
        @if (Model == null)
        {
            <tr><td colspan="12"> Không tìm thấy kết quả</td></tr>
        }
        else if (Model.Count == 0)
        {
            <tr><td colspan="12"> Không tìm thấy kết quả</td></tr>
        }
        else
        {
            foreach (var item in Model)
            {
                 <tr>
                     <td><a onclick="clearTimer()" href="@Url.Action("Details", "GeneralView", new { id = item.TranId})"><img src="~/Images/details.png" /></a></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LaneCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WeightBeginTime)
                    </td>
                    <td width="100">
                     @{
                         string img = "/Images/axles-" + item.AxlesCount.ToString() + ".png";
                         string imgW = item.AxlesCount == 7 ? "80" 
                                     : item.AxlesCount == 6 ? "70"
                                     : item.AxlesCount == 5 ? "60"
                                     : item.AxlesCount == 4 ? "55"
                                     : item.AxlesCount == 3 ? "50"
                                                            : "45";
                         }
                        <img width="~@imgW" height="20" src="@img"/></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LicensePlate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GrossWeight)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LimitWeight)
                    </td>
                    <td>
                        @{
                var l = Math.Round(item.LeftWeight.Value / item.GrossWeight.Value * 100);
                var r = 100 - l;
                string balance = l.ToString() + "/" + r.ToString();
                @Html.DisplayFor(modelItem => balance)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Velocity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VehicleLength)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AxlesCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OverloadPercent)
                    </td>
                </tr>
            }
        }
    </table>
    <div style="float:right;margin-bottom:5px;margin-top:5px">
        @Html.PagedListPager(Model, page => Url.Action("Search", new
                                                                   {
                                                                       violateLevel = ViewBag.ViolateLevel,
                                                                       laneItems = ViewBag.LaneItems,
                                                                       fromDate = ViewBag.FromDate,
                                                                       toDate = ViewBag.ToDate,
                                                                       axles = ViewBag.Axles,
                                                                       plateNumber = ViewBag.PlateNumber,
                                                                       page
                                                                   }),
                                   PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "divTransaction"/*, OnSuccess = "addrowheader()"*/ }))
    </div>



